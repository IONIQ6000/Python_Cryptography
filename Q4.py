# This code covers question 4 on assignment 1
pub = [18,30,7,26] #This is the public key that is provided to try and find the private key.
m = 6
n = 47
message = [1,1,0,1] #This is the encrypted message that is meant to be decoded.
length = len(pub)
sackres = []
deci = 0
privatekey = []

for j in range(length):     #This function encypts the message in binary 
    if(message[j] == 1):
        sackres.append(pub[j])

for ele in range(0, len(sackres)):  #This function adds the binary array to encrypt the message
    deci = deci + sackres[ele]


def mio(m, n):      #This fuction does the modular multiplicative inverse to find 
    for z in range(1, n):   
        if (((m%n) * (z%n)) % n == 1):
            return z
    return 1
y = mio(m, n) # = 8

for i in range(length):     #The private key generated by using the answer from the modular multiplicative inverse which is 8
    key = (pub[i] * y % n)
    privatekey.append(key)


print("Public key provided in Question 4", pub,", n =",n)
print("m =",m)
print("Private key generated by the code",privatekey)
print("Message in binary = ", *message,sep='')
print("Encrypted message =",deci)

